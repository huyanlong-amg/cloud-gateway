server:
  port: 8848

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: valifation #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: http://localhost:8082          #匹配后提供服务的路由地址
#          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
          predicates:
            - Path=/**         # 断言，路径相匹配的进行路由
#          filters:
#            - StripPrefix=1
#        - id: payment_routh2 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          #uri: http://localhost:8001          #匹配后提供服务的路由地址
#          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
#          predicates:
#            - Path=/payment/lb/**         # 断言，路径相匹配的进行路由
#            #- After=2020-02-21T15:51:37.485+08:00[Asia/Shanghai]
#            #- Cookie=username,zzyy
#            #- Header=X-Request-Id, \d+  # 请求头要有X-Request-Id属性并且值为整数的正则表达式
#          filters:
#            # 前缀过滤，默认配置下，我们的请求路径是 http://localhost:8888/business-oauth2/** 这时会路由到指定的服务
#            # 此处配置去掉 1 个路径前缀，再配置上面的 Path=/api/**，就能按照 http://localhost:8888/api/** 的方式访问了
#            - StripPrefix=1

app:
  id: AIMUGE-GATEWAY
apollo:
  env: DEV
  cluster: default
  portal: http://***:8070
  user: apollo
  meta: http://***:8080
  bootstrap:
    enabled: true
    namespaces: application,application.yaml
    eagerLoad:
      enabled: true
